(defun update-hash ()
  (interactive)
  (let (start (point-min)
              bound (point-min))
    (save-excursion
      (save-restriction
        (goto-char (point-min))
        (while (not (eobp))
          (setq start (point))
          (goto-char start)
          (while (re-search-forward "defcode \"\\(.*?\\)\"\\,\\(.*?\\)\\," bound t)
            (setq name (match-string-no-properties 1 nil))
            (setq strlen (length name))
            (setq hash 0)
            (setq strindex 0)
            (while (< strindex strlen)
              (setq hash (+ (* 131 hash) (aref name strindex)))
              (setq strindex (1+ strindex))
              )
            (setq higher-hash (mod (lsh hash -8) 65536))            
            (setq hash (+ (* hash 256) strlen))
            (setq lower-hash (mod hash 65536))                        
            (replace-match (format "defcode \"%s\", 0x%04x%04x," name higher-hash lower-hash)))
          (goto-char (1+ bound)))))))
  
(defun update-word-hash ()
  (interactive)
  (let (start (point-min)
              bound (point-min))
    (save-excursion
      (save-restriction
        (goto-char (point-min))
        (while (not (eobp))
          (setq start (point))
          (goto-char start)
          (while (re-search-forward "defword \"\\(.*?\\)\"\\,\\(.*?\\)\\," bound t)
            (setq name (match-string-no-properties 1 nil))
            (setq strlen (length name))
            (setq hash 0)
            (setq strindex 0)
            (while (< strindex strlen)
              (setq hash (+ (* 131 hash) (aref name strindex)))
              (setq strindex (1+ strindex))
              )
            (setq higher-hash (mod (lsh hash -8) 65536))            
            (setq hash (+ (* hash 256) strlen))
            (setq lower-hash (mod hash 65536))                        
            (replace-match (format "defword \"%s\", 0x%04x%04x," name higher-hash lower-hash)))
          (goto-char (1+ bound)))))))
